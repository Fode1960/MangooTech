const { execSync } = require('child_process');
const fs = require('fs');
require('dotenv').config();

// SQL √† ex√©cuter
const sqlContent = fs.readFileSync('./SQL-A-EXECUTER-MANUELLEMENT.sql', 'utf8');

async function reconnectAndExecuteSQL() {
  console.log('\nüîê === RECONNEXION ET EX√âCUTION SQL ===\n');
  
  try {
    // 1. Se reconnecter √† Supabase
    console.log('üîë Reconnexion √† Supabase...');
    
    const loginResult = execSync('npx supabase login', { 
      encoding: 'utf8',
      stdio: 'inherit'
    });
    
    console.log('‚úÖ Reconnexion r√©ussie!');
    
    // 2. Lier le projet
    console.log('\nüîó Liaison du projet...');
    
    const linkResult = execSync('npx supabase link --project-ref ptrqhtwstldphjaraufi', { 
      encoding: 'utf8',
      stdio: 'inherit'
    });
    
    console.log('‚úÖ Projet li√©!');
    
    // 3. Cr√©er un fichier de migration temporaire
    console.log('\nüìù Cr√©ation de la migration...');
    
    const timestamp = new Date().toISOString().replace(/[-:T]/g, '').split('.')[0];
    const migrationFile = `./supabase/migrations/${timestamp}_create_missing_tables.sql`;
    
    fs.writeFileSync(migrationFile, sqlContent);
    console.log(`‚úÖ Migration cr√©√©e: ${migrationFile}`);
    
    // 4. Appliquer la migration
    console.log('\nüöÄ Application de la migration...');
    
    const pushResult = execSync('npx supabase db push', { 
      encoding: 'utf8',
      stdio: 'pipe'
    });
    
    console.log('‚úÖ Migration appliqu√©e avec succ√®s!');
    console.log('üìã R√©sultat:', pushResult);
    
    // 5. V√©rification
    console.log('\nüîç V√©rification du d√©ploiement...');
    
    const verifyResult = execSync('node verify-production-deployment.cjs', { 
      encoding: 'utf8',
      stdio: 'pipe'
    });
    
    console.log(verifyResult);
    
    console.log('\nüéâ === D√âPLOIEMENT TERMIN√â ===\n');
    console.log('‚úÖ Tables cr√©√©es avec succ√®s!');
    console.log('‚úÖ Syst√®me d\'abonnements enti√®rement d√©ploy√©!');
    
    return { success: true };
    
  } catch (error) {
    console.error('\nüí• ERREUR:', error.message);
    
    if (error.message.includes('login')) {
      console.log('\nüîß SOLUTION MANUELLE - RECONNEXION:');
      console.log('1. Ex√©cutez: npx supabase login');
      console.log('2. Connectez-vous dans le navigateur');
      console.log('3. Ex√©cutez: npx supabase link --project-ref ptrqhtwstldphjaraufi');
      console.log('4. Relancez ce script');
    } else if (error.message.includes('migration')) {
      console.log('\nüîß SOLUTION MANUELLE - SQL:');
      console.log('Allez sur: https://supabase.com/dashboard/project/ptrqhtwstldphjaraufi/sql');
      console.log('Copiez le contenu de: SQL-A-EXECUTER-MANUELLEMENT.sql');
    }
    
    return { success: false, error: error.message };
  }
}

// Fonction alternative si la reconnexion √©choue
function showManualInstructions() {
  console.log('\nüìã === INSTRUCTIONS MANUELLES ===\n');
  
  console.log('üîê √âTAPE 1 - Reconnexion Supabase:');
  console.log('1. Ouvrez votre navigateur');
  console.log('2. Allez sur: https://supabase.com/dashboard');
  console.log('3. Connectez-vous √† votre compte');
  console.log('4. S√©lectionnez le projet: ptrqhtwstldphjaraufi');
  
  console.log('\nüìä √âTAPE 2 - Ex√©cution SQL:');
  console.log('1. Allez sur: https://supabase.com/dashboard/project/ptrqhtwstldphjaraufi/sql');
  console.log('2. Ouvrez le fichier: SQL-A-EXECUTER-MANUELLEMENT.sql');
  console.log('3. Copiez tout le contenu');
  console.log('4. Collez dans l\'√©diteur SQL');
  console.log('5. Cliquez sur "Run"');
  
  console.log('\n‚úÖ √âTAPE 3 - V√©rification:');
  console.log('Ex√©cutez: node verify-production-deployment.cjs');
  
  console.log('\nüéØ Une fois termin√©, votre syst√®me sera enti√®rement d√©ploy√©!');
}

// Ex√©cution
if (require.main === module) {
  const args = process.argv.slice(2);
  
  if (args.includes('--manual')) {
    showManualInstructions();
    process.exit(0);
  }
  
  reconnectAndExecuteSQL().then(result => {
    if (!result.success) {
      console.log('\n‚ö†Ô∏è  √âchec de l\'ex√©cution automatique.');
      console.log('üí° Utilisez: node reconnect-and-execute-sql.cjs --manual');
    }
    process.exit(result.success ? 0 : 1);
  });
}

module.exports = { reconnectAndExecuteSQL, showManualInstructions };