// Script pour v√©rifier l'affichage du pack dans l'interface

require('dotenv').config();
const { createClient } = require('@supabase/supabase-js');

const supabaseUrl = process.env.VITE_SUPABASE_URL;
const supabaseServiceKey = process.env.SUPABASE_SERVICE_ROLE_KEY;

if (!supabaseUrl || !supabaseServiceKey) {
  console.error('‚ùå Variables d\'environnement manquantes');
  process.exit(1);
}

const supabase = createClient(supabaseUrl, supabaseServiceKey);

async function verifyPackDisplay() {
  try {
    console.log('üîç V√©rification de l\'affichage du pack...');
    
    // V√©rifier l'utilisateur sp√©cifique
    const userEmail = 'mdansoko@mangoo.tech';
    
    const { data: user, error: userError } = await supabase
      .from('users')
      .select('id, email, selected_pack')
      .eq('email', userEmail)
      .single();
    
    if (userError) {
      console.error('‚ùå Utilisateur non trouv√©:', userError);
      return;
    }
    
    console.log(`üë§ Utilisateur: ${user.email}`);
    console.log(`üì¶ Selected Pack: ${user.selected_pack}`);
    
    // R√©cup√©rer le pack actif
    const { data: userPack, error: packError } = await supabase
      .from('user_packs')
      .select(`
        *,
        packs(
          id,
          name,
          price,
          currency
        )
      `)
      .eq('user_id', user.id)
      .eq('status', 'active')
      .single();
    
    if (packError) {
      console.error('‚ùå Erreur pack actif:', packError);
      return;
    }
    
    console.log('\nüìä Pack actif dans la base de donn√©es:');
    console.log(`  - Nom: ${userPack.packs.name}`);
    console.log(`  - Prix: ${userPack.packs.price} ${userPack.packs.currency}`);
    console.log(`  - Status: ${userPack.status}`);
    console.log(`  - Cr√©√©: ${userPack.created_at}`);
    console.log(`  - Mis √† jour: ${userPack.updated_at}`);
    
    // Simuler ce que l'interface devrait afficher
    console.log('\nüñ•Ô∏è Ce que l\'interface devrait afficher:');
    if (userPack.packs.price === 0) {
      console.log('  - Pack: Pack D√©couverte');
      console.log('  - Prix: Gratuit');
    } else {
      console.log(`  - Pack: ${userPack.packs.name}`);
      console.log(`  - Prix: ${userPack.packs.price} FCFA/mois`);
    }
    
    // V√©rifier s'il y a d'autres packs actifs (ne devrait pas y en avoir)
    const { data: allActivePacks, error: allPacksError } = await supabase
      .from('user_packs')
      .select(`
        *,
        packs(name, price)
      `)
      .eq('user_id', user.id)
      .eq('status', 'active');
    
    if (allPacksError) {
      console.error('‚ùå Erreur v√©rification packs:', allPacksError);
      return;
    }
    
    console.log(`\nüîç Nombre de packs actifs: ${allActivePacks.length}`);
    if (allActivePacks.length > 1) {
      console.log('‚ö†Ô∏è ATTENTION: Plusieurs packs actifs d√©tect√©s!');
      allActivePacks.forEach((pack, index) => {
        console.log(`  ${index + 1}. ${pack.packs.name} (${pack.packs.price} FCFA)`);
      });
    } else {
      console.log('‚úÖ Un seul pack actif (correct)');
    }
    
    console.log('\n‚úÖ V√©rification termin√©e');
    console.log('\nüí° Si l\'interface affiche encore "Pack Premium", essayez de:');
    console.log('   1. Rafra√Æchir la page (F5)');
    console.log('   2. Vider le cache du navigateur');
    console.log('   3. Se d√©connecter et se reconnecter');
    
  } catch (error) {
    console.error('‚ùå Erreur g√©n√©rale:', error);
  }
}

verifyPackDisplay();